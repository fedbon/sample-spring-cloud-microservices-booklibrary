###Register
POST http://localhost:8080/api/v1/auth/signup
Content-Type: application/json

{
  "username": "max_payne",
  "password": "12345",
  "first_name": "Max",
  "last_name": "Payne"
}

###Log in
POST http://localhost:8080/api/v1/auth/signin
Content-Type: application/json

{
  "username": "max_payne",
  "password": "12345"
}

###Get my account information
GET http://localhost:8080/api/v1/user/my
Authorization: Bearer {{auth_token}}
Content-Type: application/json

###Get user infromation by id
GET http://localhost:8080/api/v1/user/65c50d9900c3fe573604ed7b
Authorization: Bearer {{auth_token}}
Content-Type: application/json

###Validate token
POST http://localhost:8080/api/v1/auth/validate?token={{auth_token}}
#Authorization: Bearer {{auth_token}}
Content-Type: application/json

###Get book by id
GET http://localhost:8080/api/v1/books/1
Authorization: Bearer {{auth_token}}
Content-Type: application/json

###Get all books
GET http://localhost:8080/api/v1/books
Authorization: Bearer {{auth_token}}
Content-Type: application/json

###Order books by createAt field in descent order. Set false to change the order
GET http://localhost:8080/api/v1/books?order=createdAt&desc=true
Authorization: Bearer {{auth_token}}
Content-Type: application/json

###Get all books by genre id
GET http://localhost:8080/api/v1/books?genre=1
Authorization: Bearer {{auth_token}}
Content-Type: application/json

###Sort all books voted by user id by negative field
GET http://localhost:8080/api/v1/books?userId=3&sort=negative
Authorization: Bearer {{auth_token}}
Content-Type: application/json

###Get all comments by user id
GET http://localhost:8080/api/v1/comments/user/1
Authorization: Bearer {{auth_token}}
Content-Type: application/json





