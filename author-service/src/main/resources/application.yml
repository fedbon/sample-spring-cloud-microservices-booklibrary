server:
  port: 9876

spring:
  data:
    mongodb:
      uri: mongodb://localhost:30004/author-service-mongodb
  cloud:
    discovery:
      enabled: true
  application:
    name: author-service
#  config:
#    import: optional:configserver:http://config-server:8888
  kafka:
    consumer:
      bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      group-id: authorGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            type:
              mapping: ru.fedbon.voteservice.producer.VoteAuthorMessage:ru.fedbon.authorservice.consumer.VoteAuthorMessage

mongock:
  runner-type: "InitializingBean"
  change-logs-scan-package:
    - ru.fedbon.authorservice.mongock.changelog
  mongo-db:
    write-concern:
      journal: false
    read-concern: local

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}

logging:
  level:
    root: INFO